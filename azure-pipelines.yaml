trigger:
  branches:
    include:
      - main
  paths:
    exclude:
    - README.md

variables:
  - name: registry
    value: steeltoe.azurecr.io
  - name: repository
    value: documentation

stages:
  - stage: assemble
    displayName: Assemble
    jobs:
      - job: build
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: docker build
            inputs:
              command: build
              containerRegistry: SteeltoeContainerRegistry
              repository: $(repository)
          - task: Docker@2
            displayName: docker save
            inputs:
              command: save
              arguments: $(registry)/$(repository):$(Build.BuildId) -o $(Build.ArtifactStagingDirectory)/$(repository).$(Build.BuildId).tar
          - publish: $(Build.ArtifactStagingDirectory)
            displayName: Publish Docker Image
            artifact: docker-image
  - stage: deploy
    displayName: Deploy
    dependsOn: assemble
    condition:
      not(eq(variables['build.reason'], 'PullRequest'))
    jobs:
      - job: deployToProduction
        displayName: Deploy to Production
        pool:
          vmImage: ubuntu-latest
        steps:
          - download: current
            displayName: Download Docker Image
            artifact: docker-image
          - task: Docker@2
            displayName: docker load
            inputs:
              command: load
              arguments: --input $(Pipeline.Workspace)/docker-image/$(repository).$(Build.BuildId).tar
          - task: Docker@2
            displayName: docker tag
            inputs:
              command: tag
              arguments: $(registry)/$(repository):$(Build.BuildId) $(registry)/$(repository):latest
          - task: Docker@2
            displayName: docker push
            inputs:
              command: push
              containerRegistry: SteeltoeContainerRegistry
              repository: $(repository)
              tags: |
                $(Build.BuildId)
                latest
          - task: CopyFiles@2
            displayName: Copy Kubernetes Manifest
            inputs:
              SourceFolder: ./deploy/kubernetes
              Contents: '**'
              TargetFolder: $(Build.ArtifactStagingDirectory)/kubernetes
              CleanTargetFolder: true
          - task: PublishBuildArtifacts@1
            displayName: Stage for Release
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              publishLocation: Container
